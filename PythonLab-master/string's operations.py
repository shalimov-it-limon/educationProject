# strip() - убирает ненужные символы по краям строки.
data = '-=+ Anna +=-'
print(data)
data = (data.strip('-=+'))
print('-' * 20)

print(data)
print(data.lower()) # lower Нижний регистр.
print(data. upper()) # upper Верхний регистр.
m = 'есть многое на свете, друг Гораций, что и не снилось нашим мудрецам!'
print(m.title()) # title Все слова ничинаются с заглавной буквы.
print('-' * 20)

print(m.replace(' ', ' - ')) # replace Заменяет первый указанный с скобках символ на второй).
print(m.replace('е', str(2)))
print('-' * 20)

st = '10 - 4 - 5 - 11 - 81'
print(st)
print(type(st))
print(len(st))
print(st.split(' ')) # split разбивает строки подстроки по разделителю в скобках, упаковывает в список.
print(len(st))
print(st.split(' - '))
print(len(st))
print(len(st))
print(type(st))
print('-' * 20)

m = 'есть многое на свете, друг Гораций, что и не снилось нашим мудрецам!'
print(m.split(' ', 2)) # Разбивает на подстроки. Число в скобках показывает,
# на сколько подстрок надо разбить с начала строки по разделителю.
print(m.split(' ', 4))
print(m.split())
m1 = 'есть  многое   на  св ете,  друг Гораций, что и не снилось нашим мудрецам!'
print(m1.split(' '))
print('-' * 20)

print('Гора' in m) # Проверка подстрок - есть или нет. True or False.
print('-' * 20)

print(m1.startswith('100')) # startswith проверяет, начинается ли строка с подстроки, указанной в скобках.
print(m1.startswith('ес'))
print(m.endswith('100')) # endswith проверяет, заканчивается  ли строка подстрокой, указанной в скобках.
print(m.endswith('цам!'))
print('-' * 20)

a = ['если', "гора", "не", "идет"]
print(' - '.join(a)) # join вставляет символы, указанные в первой части
# аргумента. Или "склеивает" строки списка через указанный разделитель.
print('-' * 20)

print(m)
print(len(m))
print(m.index('Гораций')) # index показывает, после какого символа начинается набор элементов, указанный в скобках.

